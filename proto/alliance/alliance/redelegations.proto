syntax = "proto3";
package alliance.alliance;

import "gogoproto/gogo.proto";
import "cosmos/base/v1beta1/coin.proto";
import "cosmos_proto/cosmos.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/terra-money/alliance/x/alliance/types";

// Used internally to keep track of redelegations
message QueuedRedelegation {
  option (gogoproto.equal)            = false;
  option (gogoproto.goproto_getters)  = false;
  repeated Redelegation entries = 1;
}

message Redelegation {
  option (gogoproto.equal)            = false;
  option (gogoproto.goproto_getters)  = false;

  // internal or external user address
  string delegator_address = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  // redelegation source validator
  string src_validator_address = 2 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  // redelegation destination validator
  string dst_validator_address = 3 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  // amount to redelegate
  cosmos.base.v1beta1.Coin balance = 4 [(gogoproto.nullable) = false];
}

// Used on QueryServer
message RedelegationEntry {
  option (gogoproto.equal)            = false;
  option (gogoproto.goproto_getters)  = false;

  // internal or external user address
  string delegator_address = 1 [
    (cosmos_proto.scalar) = "cosmos.AddressString"
  ];
  // redelegation source validator
  string src_validator_address = 2 [
    (cosmos_proto.scalar) = "cosmos.AddressString"
  ];
  // redelegation destination validator
  string dst_validator_address = 3 [
    (cosmos_proto.scalar) = "cosmos.AddressString"
  ];
  // amount to redelegate
  cosmos.base.v1beta1.Coin balance = 4 [
    (gogoproto.nullable) = false
  ];

  // completion_time defines the unix time for redelegation completion.
  google.protobuf.Timestamp completion_time = 5 [
    (gogoproto.nullable) = false, 
    (gogoproto.stdtime) = true
  ];
}
