syntax = "proto3";
package prismatics;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "prismatics/asset.proto";
import "prismatics/maturity.proto";
import "prismatics/price.proto";
import "prismatics/historical_price.proto";
import "cosmos/tx/v1beta1/service.proto";


option go_package = "github.com/prism-finance/prismatics/types";

service Query {

  rpc Asset(QueryAssetRequest) returns (QueryAssetResponse) {
    option (google.api.http).get = "/prismatics/asset/{asset_id}";
  }

  rpc MaturityAll(QueryAllMaturitiesRequest) returns (QueryAllMaturitiesResponse) {
    option (google.api.http).get = "/prismatics/maturity";
  }

  rpc TokenPrice(QueryPriceRequest) returns (QueryPriceResponse) {
    option (google.api.http).get = "/prismatics/price/{token_in}/{token_out}";
  }

  rpc HistoricalPrice(QueryHistoricalPriceRequest) returns (QueryHistoricalPriceResponse) {
    option (google.api.http).get = "/prismatics/historical_price/{denom}";
  }
}