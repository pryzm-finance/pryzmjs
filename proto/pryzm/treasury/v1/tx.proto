syntax = "proto3";
package pryzm.treasury.v1;

import "amino/amino.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "pryzm/treasury/v1/action.proto";
import "pryzm/treasury/v1/params.proto";

option go_package = "github.com/pryzm-finance/pryzm-core/x/treasury/types/v1";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;

  rpc UpdateParams(MsgUpdateParams) returns (MsgUpdateParamsResponse);

  rpc SetAction(MsgSetAction) returns (MsgSetActionResponse);
  // this line is used by starport scaffolding # proto/tx/rpc
}

message MsgUpdateParams {
  option (cosmos.msg.v1.signer) = "authority";
  option (amino.name) = "pryzm/treasury/v1/UpdateParams";

  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  Params params = 2 [(gogoproto.nullable) = false];
}

message MsgUpdateParamsResponse {}

message MsgSetAction {
  option (cosmos.msg.v1.signer) = "authority";
  option (amino.name) = "pryzm/treasury/v1/SetAction";

  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  Action action = 2 [(gogoproto.nullable) = false];
}

message MsgSetActionResponse {}

// this line is used by starport scaffolding # proto/tx/message
