syntax = "proto3";
package pryzm.incentives.v1;

import "cosmos/base/query/v1beta1/pagination.proto";
import "cosmos/base/v1beta1/coin.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "pryzm/incentives/v1/bond.proto";
import "pryzm/incentives/v1/params.proto";
import "pryzm/incentives/v1/pool.proto";
import "pryzm/incentives/v1/unbonding.proto";
// this line is used by starport scaffolding # 1

option go_package = "github.com/pryzm-finance/pryzm-core/x/incentives/types/v1";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/pryzm/incentives/v1/params";
  }
  // Queries a Pool by index.
  rpc Pool(QueryGetPoolRequest) returns (QueryGetPoolResponse) {
    option (google.api.http).get = "/pryzm/incentives/v1/pool/{bond_denom}";
  }

  // Queries a list of Pool items.
  rpc PoolAll(QueryAllPoolRequest) returns (QueryAllPoolResponse) {
    option (google.api.http).get = "/pryzm/incentives/v1/pool";
  }

  // Queries a Bond by index.
  rpc Bond(QueryGetBondRequest) returns (QueryGetBondResponse) {
    option (google.api.http).get = "/pryzm/incentives/v1/bond/{address}/{bond_denom}";
  }

  // Queries a list of Bond items.
  rpc BondAll(QueryAllBondRequest) returns (QueryAllBondResponse) {
    option (google.api.http).get = "/pryzm/incentives/v1/bond";
  }

  // Queries a Unbonding by id.
  rpc Unbonding(QueryGetUnbondingRequest) returns (QueryGetUnbondingResponse) {
    option (google.api.http).get = "/pryzm/incentives/v1/unbonding/{id}";
  }

  // Queries a list of Unbonding items.
  rpc UnbondingAll(QueryAllUnbondingRequest) returns (QueryAllUnbondingResponse) {
    option (google.api.http).get = "/pryzm/incentives/v1/unbonding";
  }

  // this line is used by starport scaffolding # 2
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryGetPoolRequest {
  string bond_denom = 1;
}

message QueryGetPoolResponse {
  Pool pool = 1 [(gogoproto.nullable) = false];
}

message QueryAllPoolRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1 [(gogoproto.nullable) = true];
}

message QueryAllPoolResponse {
  repeated Pool pool = 1 [(gogoproto.nullable) = false];
  cosmos.base.query.v1beta1.PageResponse pagination = 2 [(gogoproto.nullable) = true];
}

message QueryGetBondRequest {
  string address = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  string bond_denom = 2;
}

message QueryGetBondResponse {
  Bond bond = 1 [(gogoproto.nullable) = false];
}

message QueryAllBondRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1 [(gogoproto.nullable) = true];
  string address = 2 [(cosmos_proto.scalar) = "cosmos.AddressString"];
}

message QueryAllBondResponse {
  repeated Bond bond = 1 [(gogoproto.nullable) = false];
  cosmos.base.query.v1beta1.PageResponse pagination = 2 [(gogoproto.nullable) = true];
}

message QueryGetUnbondingRequest {
  uint64 id = 1;
}

message QueryGetUnbondingResponse {
  Unbonding unbonding = 1 [(gogoproto.nullable) = false];
}

message QueryAllUnbondingRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1 [(gogoproto.nullable) = true];
  string address = 2 [(cosmos_proto.scalar) = "cosmos.AddressString"];
}

message QueryAllUnbondingResponse {
  repeated Unbonding unbonding = 1 [(gogoproto.nullable) = false];
  cosmos.base.query.v1beta1.PageResponse pagination = 2 [(gogoproto.nullable) = true];
}

// this line is used by starport scaffolding # 3
