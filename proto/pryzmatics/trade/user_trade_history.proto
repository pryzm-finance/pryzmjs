syntax = "proto3";
package pryzmatics.trade;

import "cosmos/base/v1beta1/coin.proto";
import "gogoproto/gogo.proto";
import "google/protobuf/timestamp.proto";
import "cosmos_proto/cosmos.proto";
import "pryzm/amm/v1/operations.proto";


option go_package = "github.com/pryzm-finance/pryzmatics/types/trade";

enum OperationType {
  option (gogoproto.goproto_enum_prefix) = false;
  OPERATION_TYPE_ANY = 0 [(gogoproto.enumvalue_customname) = "OPERATION_ANY"];
  OPERATION_TYPE_SINGLE_SWAP = 1 [(gogoproto.enumvalue_customname) = "OPERATION_SINGLE_SWAP"];
  OPERATION_TYPE_BATCH_SWAP = 2 [(gogoproto.enumvalue_customname) = "OPERATION_BATCH_SWAP"];
  OPERATION_TYPE_JOIN_POOL = 3 [(gogoproto.enumvalue_customname) = "OPERATION_JOIN_POOL"];
  OPERATION_TYPE_EXIT_POOL = 4 [(gogoproto.enumvalue_customname) = "OPERATION_EXIT_POOL"];
}

message UserTradeHistory {
  repeated cosmos.base.v1beta1.Coin amounts_in = 1 [
    (gogoproto.nullable) = false,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];
  repeated cosmos.base.v1beta1.Coin amounts_out = 2 [
    (gogoproto.nullable) = false,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];
  string address = 3;
  uint64 pool_id = 4;
  repeated pryzm.amm.v1.SwapStep path = 5 [(gogoproto.nullable) = false];
  OperationType operation_type = 6;
  repeated cosmos.base.v1beta1.Coin swap_fee = 7 [
    (gogoproto.nullable) = false,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];
  repeated cosmos.base.v1beta1.Coin join_exit_protocol_fee = 8 [
    (gogoproto.nullable) = false,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];
  repeated cosmos.base.v1beta1.Coin swap_protocol_fee = 9 [
    (gogoproto.nullable) = false,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];
  google.protobuf.Timestamp block_time = 10 [
    (gogoproto.stdtime) = true,
    (gogoproto.nullable) = false
  ];
}