syntax = "proto3";
package refractedlabs.oracle.v1;

import "amino/amino.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "google/protobuf/duration.proto";

option go_package = "github.com/refractedlabs/oracle/x/oracle/types/v1";

// Params defines the parameters for the module.
message Params {
  int64 vote_period = 1 [(amino.dont_omitempty) = true];
  string quorum = 2 [
    (cosmos_proto.scalar) = "cosmos.Dec",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];
  string vote_threshold = 3 [
    (cosmos_proto.scalar) = "cosmos.Dec",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];
  string slash_fraction = 4 [
    (cosmos_proto.scalar) = "cosmos.Dec",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];
  int64 slash_window = 5;
  string max_miss_rate_per_slash_window = 6 [
    (cosmos_proto.scalar) = "cosmos.Dec",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];
  string max_miss_rate_per_vote_period = 7 [
    (cosmos_proto.scalar) = "cosmos.Dec",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];
  // ratio in range [0, 1] which determines the amount of collected fees that is supposed to be distributed among validators as oracle reward
  string fee_collector_reward_ratio = 8 [
    (cosmos_proto.scalar) = "cosmos.Dec",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];
}
