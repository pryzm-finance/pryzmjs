syntax = "proto3";
package refractedlabs.flowtrade.v1;

import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/refractedlabs/flowtrade/x/flowtrade/types/v1";

message Position {
  // the flow for which this position is created
  uint64 flow = 1;

  // the address of the position's owner
  string owner = 2 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // the address that the owner has delegated position management to.
  // the operator is allowed to manage the position
  string operator = 3 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // an index for the amount of purchase that has already been applied
  string dist_index = 4 [
    (cosmos_proto.scalar) = "cosmos.Dec",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];

  // the current amount of token-in provided to buy token-out
  string token_in_balance = 5 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];

  // the amount of already spent in tokens
  string spent_token_in = 6 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];

  // the shares of this position from the flow
  string shares = 7 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];

  // the amount of out tokens that has purchased by user
  string purchased_token_out = 8 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];

  // the amount of purchased token that are paid for, but not calculated in purchased_token_out because of rounding errors
  string pending_purchase = 9 [
    (cosmos_proto.scalar) = "cosmos.Dec",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];

  // the amount of purchase that has been claimed by user and already transferred to their account
  string claimed_amount = 10 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];
}
