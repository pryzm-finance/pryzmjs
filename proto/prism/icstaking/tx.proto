syntax = "proto3";
package prism.icstaking;

import "cosmos/base/v1beta1/coin.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "prism/icstaking/host_chain.proto";
import "prism/icstaking/params.proto";
// this line is used by starport scaffolding # proto/tx/import

option go_package = "github.com/prism-finance/prism-core/x/icstaking/types";

// Msg defines the Msg service.
service Msg {
  rpc UpdateParams(MsgUpdateParams) returns (MsgUpdateParamsResponse);
  rpc RegisterHostChain(MsgRegisterHostChain) returns (MsgRegisterHostChainResponse);
  rpc UpdateHostChain(MsgUpdateHostChain) returns (MsgUpdateHostChainResponse);
  rpc Stake(MsgStake) returns (MsgStakeResponse);
  rpc Unstake(MsgUnstake) returns (MsgUnstakeResponse);
  rpc RedeemUnstaked(MsgRedeemUnstaked) returns (MsgRedeemUnstakedResponse);
  rpc InstantUnstake(MsgInstantUnstake) returns (MsgInstantUnstakeResponse);
  rpc RebalanceDelegations(MsgRebalanceDelegations) returns (MsgRebalanceDelegationsResponse);
  rpc RedeemInterchainAccount(MsgRedeemInterchainAccount) returns (MsgRedeemInterchainAccountResponse);
  // this line is used by starport scaffolding # proto/tx/rpc
}

message MsgUpdateParams {
  string authority = 1;
  Params params = 2 [(gogoproto.nullable) = false];
}

message MsgUpdateParamsResponse {}

message MsgRegisterHostChain {
  string authority = 1;
  HostChain host_chain = 2 [(gogoproto.nullable) = false];
}

message MsgRegisterHostChainResponse {}

message MsgUpdateHostChain {
  string authority = 1;
  string host_chain_id = 2;
  repeated Validator validators = 3 [
    (gogoproto.nullable) = false,
    (gogoproto.castrepeated) = "Validators"
  ];
  StakingParams params = 4;
}

message MsgUpdateHostChainResponse {}

message MsgStake {
  string creator = 1;
  string host_chain = 2;
  string transfer_channel = 3;
  string amount = 4 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];
}

message MsgStakeResponse {
  cosmos.base.v1beta1.Coin c_amount = 1 [(gogoproto.nullable) = false];
  cosmos.base.v1beta1.Coin fee = 2 [(gogoproto.nullable) = false];
}

message MsgUnstake {
  string creator = 1;
  string host_chain = 2;
  string transfer_channel = 3;
  string c_amount = 4 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];
}

message MsgUnstakeResponse {
  cosmos.base.v1beta1.Coin u_amount = 1 [(gogoproto.nullable) = false];
}

message MsgRedeemUnstaked {
  string creator = 1;
  string host_chain = 2;
  string transfer_channel = 3;
  string u_amount = 4 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];
  uint64 epoch = 5;
}

message MsgRedeemUnstakedResponse {
  cosmos.base.v1beta1.Coin amount = 1 [(gogoproto.nullable) = false];
  cosmos.base.v1beta1.Coin fee = 2 [(gogoproto.nullable) = false];
}

message MsgInstantUnstake {
  string creator = 1;
  string host_chain = 2;
  string transfer_channel = 3;
  string min_c_amount = 4 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];
  string max_c_amount = 5 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];
}

message MsgInstantUnstakeResponse {
  cosmos.base.v1beta1.Coin amount = 1 [(gogoproto.nullable) = false];
  cosmos.base.v1beta1.Coin fee = 2 [(gogoproto.nullable) = false];
}

message MsgRebalanceDelegations {
  string creator = 1;
  string host_chain = 2;
}

message MsgRebalanceDelegationsResponse {}

enum ICAType {
  DELEGATION = 0;
  REWARD = 1;
  FEE = 2;
  SWEEP = 3;
}

message MsgRedeemInterchainAccount {
  string creator = 1;
  string host_chain = 2;
  ICAType account_type = 3;
}

message MsgRedeemInterchainAccountResponse {}

// this line is used by starport scaffolding # proto/tx/message
