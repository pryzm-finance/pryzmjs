syntax = "proto3";
package prism.icstaking;

import "gogoproto/gogo.proto";
import "ibc/core/client/v1/client.proto";
import "prism/icstaking/host_chain.proto";

option go_package = "github.com/prism-finance/prism-core/x/icstaking/types";

// OraclePayload defines the structure of oracle vote payload
message OraclePayload {
  // Oracle is reporting the data based on the host chain’s time which may have a time difference with Prism.
  // In order to be accurate, we use a reference of host chain’s latest block in which Prism's state has changed to idle,
  // and oracle feeders' reported block height is checked to be after that specific block
  ibc.core.client.v1.Height block_height = 1 [(gogoproto.nullable) = false];

  // map of validator addresses to the amount delegated to that validator
  map<string, ValidatorState> validators = 3 [(gogoproto.nullable) = false];

  // balance of delegation interchain account
  string delegation_account_balance = 4 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];

  // balance of reward interchain account
  string reward_account_balance = 5 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];

  // balance of sweep interchain account
  string sweep_account_balance = 6 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];

  // the largest undelegation epoch number for which the undelegation is completed and is ready to be swept to PRISM
  // reporting this with zero means that none of incomplete undelegations are completed.
  uint64 last_completed_undelegation_epoch = 7;
}
