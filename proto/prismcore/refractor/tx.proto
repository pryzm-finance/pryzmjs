syntax = "proto3";
package prismfinance.prismcore.refractor;

// this line is used by starport scaffolding # proto/tx/import
import "cosmos/base/v1beta1/coin.proto";
import "gogoproto/gogo.proto";

option go_package = "github.com/prism-finance/prism-core/x/refractor/types";

// Msg defines the Msg service.
service Msg {
  rpc Refract(MsgRefract) returns (MsgRefractResponse);
  rpc Redeem(MsgRedeem) returns (MsgRedeemResponse);
  // this line is used by starport scaffolding # proto/tx/rpc
}

message MsgRefract {
  string creator = 1;
  cosmos.base.v1beta1.Coin amount = 2 [(gogoproto.nullable) = false];
  string maturity = 3;
}

message MsgRefractResponse {
  cosmos.base.v1beta1.Coin p_amount = 1 [(gogoproto.nullable) = false];
  cosmos.base.v1beta1.Coin y_amount = 2 [(gogoproto.nullable) = false];
  cosmos.base.v1beta1.Coin fee = 3 [(gogoproto.nullable) = false];
}

message MsgRedeem {
  string creator = 1;
  cosmos.base.v1beta1.Coin p_amount = 2 [(gogoproto.nullable) = false];
  cosmos.base.v1beta1.Coin y_amount = 3;
}

message MsgRedeemResponse {
  cosmos.base.v1beta1.Coin c_amount = 1 [(gogoproto.nullable) = false];
  cosmos.base.v1beta1.Coin fee = 2 [(gogoproto.nullable) = false];
}

// this line is used by starport scaffolding # proto/tx/message
