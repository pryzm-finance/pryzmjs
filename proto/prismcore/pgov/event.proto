syntax = "proto3";
package prismfinance.prismcore.pgov;

option go_package = "github.com/prism-finance/prism-core/x/pgov/types";

import "cosmos/base/v1beta1/coin.proto";
import "gogoproto/gogo.proto";
import "prismcore/pgov/vote.proto";
import "prismcore/pgov/proposal.proto";

message EventPAssetStake {
  string address = 1;
  string asset = 2;
  repeated cosmos.base.v1beta1.Coin amount = 3 [
    (gogoproto.nullable) = false,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];
  string total_staked_p_asset = 4 [
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false
  ];
}

message EventPAssetUnstake {
  string address = 1;
  string asset = 2;
  repeated cosmos.base.v1beta1.Coin amount = 3 [
    (gogoproto.nullable) = false,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];
  string total_staked_p_asset = 4 [
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false
  ];
}

message EventVoteSubmit {
  pgov.Vote vote = 1;
}

message EventProposalEnd {
  pgov.Proposal proposal = 1;
}

message EventVoteTransmit {
  uint64 proposal_id = 1;
  string asset = 2;
}

message EventVoteTransmitFailure {
  uint64 proposal_id = 1;
  string asset = 2;
  string error = 3;
}

message EventVoteAckSuccess {
  uint64 proposal_id = 1;
  string asset = 2;
}

message EventVoteAckFailure {
  uint64 proposal_id = 1;
  string asset = 2;
  string error = 3;
}

message EventVoteTimeout {
  uint64 proposal_id = 1;
  string asset = 2;
}