syntax = "proto3";
package prismfinance.prismcore.treasury;

import "gogoproto/gogo.proto";
import "prismcore/treasury/action.proto";
import "prismcore/treasury/stream_swap.proto";
import "cosmos/base/v1beta1/coin.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/prism-finance/prism-core/x/treasury/types";

message EventTreasuryCollectFee {
  string fee_type = 1;
  string amount = 2;
  string from = 3;
}

message EventCreateStreamForAmount{
  uint64 stream_id = 1;
  ActionType action_type = 2;
  cosmos.base.v1beta1.Coin amount = 3 [(gogoproto.nullable) = false];
}

message EventExecuteActionForAmount{
  ActionType action_type = 1;
  cosmos.base.v1beta1.Coin amount = 2 [(gogoproto.nullable) = false];
}

message EventSetAction{
  Action action = 1 [(gogoproto.nullable) = false];
}

message EventSetStreamSwap{
  StreamSwap streamSwap = 1 [(gogoproto.nullable) = false];
}

message EventRemoveStreamSwap{
  google.protobuf.Timestamp end_time = 1 [
    (gogoproto.stdtime) = true,
    (gogoproto.nullable) = false
  ];
  uint64 stream_id = 2;
}
