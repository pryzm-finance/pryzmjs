syntax = "proto3";
package prismfinance.prismcore.icq;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "prismcore/icq/interchain_query.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "cosmos/base/abci/v1beta1/abci.proto";
import "cosmos/tx/v1beta1/tx.proto";
import "tendermint/types/types.proto";

option go_package = "github.com/prism-finance/prism-core/x/icq/types";

// Query provides defines the gRPC querier service.
service Query {
  rpc InterchainQueries(QueryInterchainQueryRequest) returns (QueryInterchainQueryResponse) {
    option (google.api.http).get = "/prism-finance/prism-core/icq/interchain_queries/{chain_id}";
  }
}

message QueryInterchainQueryRequest {
  string chain_id = 1;
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

message QueryInterchainQueryResponse {
  repeated prismcore.icq.InterchainQuery queries = 1 [(gogoproto.nullable) = false];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
