syntax = "proto3";
package prismfinance.prismcore.mint;

import "gogoproto/gogo.proto";

option go_package = "github.com/prism-finance/prism-core/x/mint/types";

// DistributionProportions defines the distribution proportions of the minted
// denom. In other words, defines which stakeholders will receive the minted
// denoms and how much.
message DistributionProportions {
  // staking defines the proportion of the minted mint_denom that is to be
  // allocated as staking rewards.
  string staking = 1 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
  // pool_incentives defines the proportion of the minted mint_denom that is
  // to be allocated as pool incentives.
  string pool_incentives = 2 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
  // developer_rewards defines the proportion of the minted mint_denom that is
  // to be allocated to developer rewards address.
  string development = 3 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
  // dapp_fund defines the proportion of the minted mint_denom that is
  // to be allocated to the dapp developers.
  string dapp = 4 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
  // oracle_rewards defines the proportion of the minted mint_denom that is
  // to be allocated to the oracle feeders.
  string oracle = 5 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
}

// Params defines the parameters for the module.
message Params {
  // type of coin to mint
  string mint_denom = 1;

  // maximum annual change in inflation rate
  string inflation_rate_change = 2 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];

  // maximum inflation rate
  string inflation_max = 3 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];

  // minimum inflation rate
  string inflation_min = 4 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];

  // goal of percent bonded atoms
  string goal_bonded = 5 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];

  // epoch_identifier mint epoch identifier e.g. (day, week).
  string epoch_identifier = 6;

  // minting_rewards_distribution_start_epoch start epoch to distribute minting rewards
  int64 minting_rewards_distribution_start_epoch = 7;

  // distribution_proportions defines the distribution proportions of the minted
  // denom. In other words, defines which stakeholders will receive the minted
  // denoms and how much.
  DistributionProportions distribution_proportions = 8  [(gogoproto.nullable) = false];

  // genesis_epoch_provisions epoch provisions from the first epoch.
  string genesis_epoch_provisions = 9 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];

  string development_account_address = 10;
}
